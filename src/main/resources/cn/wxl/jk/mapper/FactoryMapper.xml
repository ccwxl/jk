<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itcast.jk.mapper.FactoryMapper">
	<!-- resultMap映射 -->
	<resultMap type="cn.wxl.jk.domain.Factory" id="factoryMap">
		<id property="id" column="Factory_ID" />
		<result property="fullName" column="FULL_NAME" />
		<result property="factoryName" column="FACTORY_NAME" />
		<result property="contacts" column="CONTACTS" />
		<result property="phone" column="PHONE" />
		<result property="mobile" column="MOBILE" />
		<result property="fax" column="FAX" />
		<result property="cnote" column="CNOTE" />
		<result property="inspector" column="INSPECTOR" />
		<result property="orderNo" column="ORDER_NO" />
		<result property="state" column="STATE" />
		<result property="createBy" column="CREATE_BY" />
		<result property="createDept" column="CREATE_DEPT" />
		<result property="createTime" column="CREATE_TIME" />
	</resultMap>
	<!-- 查询(只显示状态为启用的) -->
	<select id="find" parameterType="map" resultMap="factoryMap">
		select * from
		factory_c
		where 1=1
		<if test="state!=null">
			and STATE=#{state}
		</if>
	</select>
	<!-- 查询一个,#{pid}可以随意写,#{id}也可以 -->
	<select id="get" parameterType="string" resultMap="factoryMap">
		select * from factory_c
		where factory_id =#{pid}
	</select>
	<!-- 新增时,如果数据库是oracle测需要指定字段的类型,jdbcType=VARCHAR(mybatis自定义) 
			无效的列类型: 1111; nested exception is java.sql.SQLException
			mysql不用写 -->
	<insert id="insert" parameterType="cn.wxl.jk.domain.Factory">
		insert into
		factory_c(FACTORY_ID,FULL_NAME,FACTORY_NAME,CONTACTS,PHONE,MOBILE,FAX,CNOTE,INSPECTOR,ORDER_NO,STATE,CREATE_BY,CREATE_DEPT,CREATE_TIME)
		values(
			#{id},
			#{fullName, jdbcType=VARCHAR},
			#{factoryName,jdbcType=VARCHAR},
			#{contacts,jdbcType=VARCHAR},
			#{phone,jdbcType=VARCHAR},
			#{mobile,jdbcType=VARCHAR},
			#{fax,jdbcType=VARCHAR},
			#{cnote,jdbcType=VARCHAR},
			#{inspector,jdbcType=VARCHAR},
			#{orderNo, jdbcType=INTEGER},
			#{state, jdbcType=VARCHAR},
			#{createBy, jdbcType=VARCHAR},
			#{createDept, jdbcType=VARCHAR},
			#{createTime, jdbcType=TIMESTAMP}
		)
	</insert>
	
	<!-- 修改保存,这里的id必须写成id,因为是从po中取出的 -->
	<update id="update" parameterType="cn.wxl.jk.domain.Factory" >
		update factory_c
		<set>
			<if test="fullName!=null">FULL_NAME=#{fullName, jdbcType=VARCHAR},</if>
			<if test="factoryName!=null">FACTORY_NAME=#{factoryName, jdbcType=VARCHAR},</if>
			<if test="contacts!=null">CONTACTS=#{contacts,jdbcType=VARCHAR},</if>
			<if test="phone!=null">PHONE=#{phone,jdbcType=VARCHAR},</if>
			<if test="mobile!=null">MOBILE=#{mobile,jdbcType=VARCHAR},</if>
			<if test="fax!=null">FAX=#{fax,jdbcType=VARCHAR},</if>
			<if test="cnote!=null">CNOTE=#{cnote,jdbcType=VARCHAR},</if>
			<if test="inspector!=null">INSPECTOR=#{inspector,jdbcType=VARCHAR},</if>
			<if test="orderNo!=null">ORDER_NO=#{orderNo, jdbcType=INTEGER},</if>
			<if test="state!=null">STATE=#{state, jdbcType=VARCHAR},</if>
			<if test="createBy!=null">CREATE_BY=#{createBy, jdbcType=VARCHAR},</if>
			<if test="createDept!=null">CREATE_DEPT=#{createDept,jdbcType=VARCHAR},</if>
			<if test="createTime!=null">CREATE_TIME=#{createTime, jdbcType=TIMESTAMP}</if>
		</set>
		where factory_id=#{id}
	</update>

	<!-- 删除一条 -->
	<delete id="deleteById" parameterType="string" >
		delete from factory_c
		where factory_id=#{id}
	</delete>
	
	<!-- 删除多条 -->
	<delete id="delete" parameterType="string">
		delete from factory_c
		where factory_id in
		<foreach collection="array" item="id" open="(" close=")" separator=",">
				#{id}
		</foreach>
	</delete>
	
	<!-- 启用/禁用一条或多条数据 -->
	<update id="updateState" parameterType="map">
		update factory_c set state=#{state}
		where factory_id in 
		<foreach collection="ids" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</update>
	
	
</mapper>